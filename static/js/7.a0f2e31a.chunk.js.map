{"version":3,"sources":["api/home.api.js","components/Hero/index.js","components/PhotoGrid/index.js","components/PageController/index.js","views/Home/index.js"],"names":["homeApiUrl","Hero","props","title","subtitle","image","className","style","backgroundImage","defaultProps","PhotoGrid","photos","map","photo","icon","faHeart","color","marginRight","marginLeft","faShareAlt","faFacebookSquare","faInstagram","faTwitter","src","thumbnailUrl","alt","id","PageController","pages","currentPage","onChange","role","Pagination","count","page","e","Home","fetchSubtitle","a","axios","get","then","res","data","setState","value","catch","fetchPhotos","Math","ceil","length","onChangePage","state","undefined","this","array","pageSize","slice","paginate","Component"],"mappings":"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","file":"static/js/7.a0f2e31a.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const homeApiUrl = {\n  subtitle: 'https://api.chucknorris.io/jokes/random',\n  photos: 'https://jsonplaceholder.typicode.com/photos',\n}\n\nexport function apiGetSubtitle() {\n  return axios.get(homeApiUrl.subtitle);\n}\n\nexport function apiGetPhotos() {\n  return axios.get(homeApiUrl.photos);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Hero.scss';\n\nconst Hero = (props) => {\n  const { title, subtitle, image } = props;\n  return(\n    <section\n      className=\"hero\"\n      style={{ backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('${image}')` }}\n    >\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <h1 className=\"hero-title title\">{title}</h1>\n          <h3 className=\"hero-subtitle subtitle\">{subtitle}</h3>\n          <button className=\"hero-button button is-primary is-outlined\">More Info</button>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nHero.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  image: PropTypes.string,\n};\n\nHero.defaultProps = {\n  title: 'Lorem Ipsum',\n  subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus elementum turpis orci.',\n  image: 'assets/images/placeholder_hero.jpg',\n};\n\nexport default Hero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart, faShareAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebookSquare, faInstagram, faTwitter } from '@fortawesome/free-brands-svg-icons';\n\nimport './PhotoGrid.scss';\n\nconst PhotoGrid = (props) => {\n  const { photos } = props;\n  return(\n    <div className=\"photo-grid container-body\">\n      <div className=\"columns is-multiline\">\n        {photos.map((photo) => (\n            <div className=\"column is-3-desktop is-4-tablet\" key={photo.id}>\n              <div className=\"photo-actions\">\n                <FontAwesomeIcon icon={faHeart} color=\"#FF0000\" style={{ marginRight: '0.25rem' }} />\n                <span className=\"like-count\" style={{ marginLeft: 0 }}>124</span>\n                <span className=\"action-share\">\n                  <FontAwesomeIcon icon={faShareAlt} />\n                  <div className=\"share-social-media\">\n                    <FontAwesomeIcon icon={faFacebookSquare} />\n                    <FontAwesomeIcon icon={faInstagram} />\n                    <FontAwesomeIcon icon={faTwitter} />\n                  </div>\n                </span>\n              </div>\n              <img className=\"photo-grid-item\" src={photo.thumbnailUrl} alt={photo.title} />\n              <figcaption className=\"photo-caption\">{photo.title}</figcaption>\n            </div>\n        ))}\n      </div>\n    </div>\n  )\n};\n\nPhotoGrid.propTypes = {\n  photos: PropTypes.arrayOf(PropTypes.shape({\n    albumId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    url: PropTypes.string,\n    thumbnailUrl: PropTypes.string,\n  })),\n};\n\nPhotoGrid.defaultProps = {\n  photos: [],\n};\n\nexport default PhotoGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination } from '@material-ui/lab';\n\nimport './PageController.scss';\n\nconst PageController = (props) => {\n  const { pages, currentPage, onChange } = props;\n\n  const onChangePage = (e, page) => {\n    onChange(page);\n  };\n\n  return(\n    <nav className=\"page-controller pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n      <Pagination\n        count={pages}\n        page={currentPage}\n        onChange={onChangePage}\n        color=\"primary\"\n      />\n    </nav>\n  )\n};\n\nPageController.propTypes = {\n  pages: PropTypes.number,\n  currentPage: PropTypes.number,\n  onChange: PropTypes.func,\n};\n\nPageController.defaultProps = {\n  pages: 1,\n  currentPage: 1,\n  onChange: () => {},\n};\n\nexport default PageController;\n","import React, { Component } from 'react';\nimport { apiGetSubtitle, apiGetPhotos } from 'api/home.api';\nimport Hero from 'components/Hero';\nimport PhotoGrid from 'components/PhotoGrid';\nimport PageController from 'components/PageController';\n\nconst PAGE_SIZE = 16;\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitle: undefined,\n      photos: [],\n      pages: 1,\n      page: 1,\n    }\n  }\n\n  componentDidMount() {\n    this.fetchSubtitle();\n    this.fetchPhotos();\n  }\n\n  fetchSubtitle = async () => {\n    await apiGetSubtitle()\n      .then((res) => {\n        const { data } = res;\n        this.setState({ subtitle: data.value });\n      })\n      .catch(() => {\n      })\n  }\n\n  fetchPhotos = async () => {\n    await apiGetPhotos()\n      .then((res) => {\n        const { data } = res;\n        this.setState({\n          photos: data,\n          pages: Math.ceil(data.length / PAGE_SIZE),\n        });\n      })\n      .catch(() => {\n      })\n  }\n\n  paginate(array, pageSize, page) {\n    return array.slice((page - 1) * pageSize, page * pageSize);\n  }\n\n  onChangePage = (currentPage) => {\n    this.setState({\n      page: currentPage,\n    });\n  }\n\n  render() {\n    const {\n      subtitle, photos, pages, page,\n    } = this.state;\n\n    return (\n      <div className=\"home page\">\n        <Hero title=\"Photos\" subtitle={subtitle} image=\"https://source.unsplash.com/random\" />\n        <PhotoGrid photos={this.paginate(photos, PAGE_SIZE, page)} />\n        <PageController pages={pages} currentPage={page} onChange={this.onChangePage} />\n      </div>\n    )\n  }\n}\n\nexport default Home;\n"],"sourceRoot":""}